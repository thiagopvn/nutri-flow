rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection - users can only read/write their own data
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      
      // Patients subcollection - only the nutritionist can access
      match /patients/{patientId} {
        allow read, write: if isOwner(userId);
        
        // Diet plans subcollection
        match /dietPlans/{planId} {
          allow read, write: if isOwner(userId);
        }
      }
    }
    
    // Appointments collection - filter by nutritionistId
    match /appointments/{appointmentId} {
      allow read: if isAuthenticated() && 
        (resource.data.nutritionistId == request.auth.uid || 
         resource.data.patientId == request.auth.uid);
      allow create: if isAuthenticated() && 
        request.resource.data.nutritionistId == request.auth.uid;
      allow update, delete: if isAuthenticated() && 
        resource.data.nutritionistId == request.auth.uid;
    }
    
    // Chats collection
    match /chats/{chatId} {
      allow read: if isAuthenticated() && 
        request.auth.uid in resource.data.participants;
      allow create: if isAuthenticated() && 
        request.auth.uid in request.resource.data.participants;
      allow update: if isAuthenticated() && 
        request.auth.uid in resource.data.participants;
      
      // Messages subcollection
      match /messages/{messageId} {
        allow read: if isAuthenticated() && 
          request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
        allow create: if isAuthenticated() && 
          request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants &&
          request.resource.data.senderId == request.auth.uid;
      }
    }
    
    // Financial records - stored as subcollection of users
    match /users/{userId}/financialRecords/{recordId} {
      allow read, write: if isOwner(userId);
    }
  }
}